<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.dao.attend.AttendMapper">
  <resultMap id="BaseResultMap" type="com.spring.model.attend.Attend">
    <id column="ATTEND_ID" property="attendId" jdbcType="VARCHAR"/>
    <result column="ATTEND_DATE" property="attendDate" jdbcType="VARCHAR"/>
    <result column="ATTEND_WEEK" property="attendWeek" jdbcType="VARCHAR"/>
    <result column="ATTEND_MORNING" property="attendMorning" jdbcType="TIMESTAMP"/>
    <result column="ATTEND_EVENING" property="attendEvening" jdbcType="TIMESTAMP"/>
    <result column="WORK_HOURS" property="workHours" jdbcType="INTEGER"/>
    <result column="ABSENCE" property="absence" jdbcType="INTEGER"/>
    <result column="ATTEND_STATUS" property="attendStatus" jdbcType="INTEGER"/>
    <result column="USER_ATTEND_ID" property="userAttendId" jdbcType="VARCHAR"/>
    <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
    <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List">
    ATTEND_ID, ATTEND_DATE, ATTEND_WEEK, ATTEND_MORNING, ATTEND_EVENING, WORK_HOURS, ABSENCE, ATTEND_STATUS
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_attend
    where ATTEND_ID = #{attendId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_attend
    where ATTEND_ID = #{attendId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.spring.model.attend.Attend">
    insert into t_attend (ATTEND_ID, ATTEND_DATE, ATTEND_WEEK, 
      ATTEND_MORNING, ATTEND_EVENING, WORK_HOURS, ABSENCE,
      ATTEND_STATUS)
    values (#{attendId,jdbcType=VARCHAR}, #{attendDate,jdbcType=VARCHAR}, #{attendWeek,jdbcType=VARCHAR},
      #{attendMorning,jdbcType=TIMESTAMP}, #{attendEvening,jdbcType=TIMESTAMP}, #{workHours,jdbcType=INTEGER},
      #{absence,jdbcType=INTEGER},#{attendStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.model.attend.Attend">
    insert into t_attend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendId != null">
        ATTEND_ID,
      </if>
      <if test="attendDate != null">
        ATTEND_DATE,
      </if>
      <if test="attendWeek != null">
        ATTEND_WEEK,
      </if>
      <if test="attendMorning != null">
        ATTEND_MORNING,
      </if>
      <if test="attendEvening != null">
        ATTEND_EVENING,
      </if>
      <if test="workHours != null">
        WORK_HOURS,
      </if>
      <if test="absence != null">
        ABSENCE,
      </if>
      <if test="attendStatus != null">
        ATTEND_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendId != null">
        #{attendId,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null">
        #{attendDate,jdbcType=VARCHAR},
      </if>
      <if test="attendWeek != null">
        #{attendWeek,jdbcType=VARCHAR},
      </if>
      <if test="attendMorning != null">
        #{attendMorning,jdbcType=TIMESTAMP},
      </if>
      <if test="attendEvening != null">
        #{attendEvening,jdbcType=TIMESTAMP},
      </if>
      <if test="workHours != null">
        #{workHours,jdbcType=INTEGER},
      </if>
      <if test="absence != null">
        #{absence,jdbcType=INTEGER},
      </if>
      <if test="attendStatus != null">
        #{attendStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.model.attend.Attend">
    update t_attend
    <set>
      <if test="attendDate != null">
        ATTEND_DATE = #{attendDate,jdbcType=VARCHAR},
      </if>
      <if test="attendWeek != null">
        ATTEND_WEEK = #{attendWeek,jdbcType=VARCHAR},
      </if>
      <if test="attendMorning != null">
        ATTEND_MORNING = #{attendMorning,jdbcType=TIMESTAMP},
      </if>
      <if test="attendEvening != null">
        ATTEND_EVENING = #{attendEvening,jdbcType=TIMESTAMP},
      </if>
      <if test="workHours != null">
        WORK_HOURS = #{workHours,jdbcType=INTEGER},
      </if>
      <if test="absence != null">
        ABSENCE = #{absence,jdbcType=INTEGER},
      </if>
      <if test="attendStatus != null">
        ATTEND_STATUS = #{attendStatus,jdbcType=INTEGER},
      </if>
    </set>
    where ATTEND_ID = #{attendId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.model.attend.Attend">
    update t_attend
    set ATTEND_DATE = #{attendDate,jdbcType=VARCHAR},
      ATTEND_WEEK = #{attendWeek,jdbcType=VARCHAR},
      ATTEND_MORNING = #{attendMorning,jdbcType=TIMESTAMP},
      ATTEND_EVENING = #{attendEvening,jdbcType=TIMESTAMP},
      WORK_HOURS = #{workHours,jdbcType=INTEGER},
      ABSENCE = #{absence,jdbcType=INTEGER},
      ATTEND_STATUS = #{attendStatus,jdbcType=INTEGER}
    where ATTEND_ID = #{attendId,jdbcType=VARCHAR}
  </update>

  <select id="getTodayRecordAttend" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    WHERE ua.USER_ID = #{userId,jdbcType=VARCHAR}
    AND a.ATTEND_DATE = CURDATE()
  </select>

  <select id="getUserIdAbsence" resultType="java.lang.String">
    SELECT u.USER_ID FROM t_user u
    WHERE u.USER_ID NOT IN (
        SELECT ua.USER_ID FROM t_user_attend ua
        LEFT JOIN t_attend a
        ON ua.ATTEND_ID = a.ATTEND_ID
        WHERE a.ATTEND_DATE = CURDATE()
    )
  </select>
  
  <insert id="batchInsert" parameterType="java.util.List">
    INSERT  INTO  t_attend(ATTEND_ID, ATTEND_DATE, ATTEND_WEEK, ATTEND_MORNING,
    ATTEND_EVENING, WORK_HOURS, ABSENCE, ATTEND_STATUS)
    VALUES 
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      (#{item.attendId}, #{item.attendDate}, #{item.attendWeek}, #{item.attendMorning},
      #{item.attendEvening}, #{item.workHours}, #{item.absence}, #{item.attendStatus})
    </foreach>
  </insert>

  <select id="getTodayEveningAbsence" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    WHERE a.ATTEND_DATE = CURDATE()
    AND a.ATTEND_EVENING IS NULL
    AND a.ATTEND_STATUS = 0
    AND a.ATTEND_WEEK NOT IN ('星期六','星期天')
  </select>
  
  <select id="getAllAttendRecord" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    WHERE ua.USER_ID = #{userId}
  </select>
  
  <select id="getCurrentMonthAttendRecord" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    WHERE ua.USER_ID = #{userId}
    AND DATE_FORMAT( a.ATTEND_DATE, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' )
  </select>
  
  <select id="getCurrentWeekAttendRecord" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    WHERE ua.USER_ID = #{userId}
    AND YEARWEEK(date_format(a.ATTEND_DATE,'%Y-%m-%d')) = YEARWEEK(now())
  </select>
  
  <select id="getLastMonthAttendRecord" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    WHERE ua.USER_ID = #{userId}
    AND PERIOD_DIFF(date_format(now() , '%Y%m' ) , date_format(a.ATTEND_DATE, '%Y%m' ) ) =1
  </select>

  <select id="getMessageByDate" parameterType="com.spring.param.AttendFilter" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_DATE = #{date}
    AND ua.USER_ID = #{userId}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    ORDER BY a.ATTEND_DATE DESC
  </select>

  <select id="selectAllData" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    ORDER BY a.ATTEND_DATE DESC
  </select>

  <select id="selectAttendRecordByCondition" resultMap="BaseResultMap" parameterType="com.spring.param.SystemFilter">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    <if test="userName !=null and userName != ''">
      AND u.USER_NAME LIKE concat(concat('%', #{userName}, '%'))
    </if>
    <if test="attendStatus != null">
      AND a.ATTEND_STATUS = #{attendStatus}
    </if>
    ORDER BY a.ATTEND_DATE DESC
  </select>

  <select id="selectAttend" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    AND u.USER_ID = #{userId}
    ORDER BY a.ATTEND_DATE DESC
  </select>

  <select id="getAttendRecordByAttendId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_ID = #{attendId}
  </select>
  
  <select id="getLastMonthTableData" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    AND ua.USER_ID = #{userId}
    AND PERIOD_DIFF(date_format(now() , '%Y%m' ) , date_format(a.ATTEND_DATE, '%Y%m' ) ) =1
  </select>

  <select id="getWeekTableData" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    AND ua.USER_ID = #{userId}
    AND YEARWEEK(date_format(a.ATTEND_DATE,'%Y-%m-%d')) = YEARWEEK(now())
  </select>

  <select id="getMonthTableData" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE a.ATTEND_WEEK NOT IN ('星期六', '星期日')
    AND ua.USER_ID = #{userId}
    AND DATE_FORMAT( a.ATTEND_DATE, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' )
  </select>

  <select id="getAllAttend" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
  </select>
  
  <select id="getLastMonthAttend" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE PERIOD_DIFF(date_format(now() , '%Y%m' ) , date_format(a.ATTEND_DATE, '%Y%m' ) ) =1
  </select>

  <select id="getCurrentMonthAttend" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE DATE_FORMAT( a.ATTEND_DATE, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' )
  </select>

  <select id="getWeekAttend" resultMap="BaseResultMap">
    SELECT * FROM t_attend a
    LEFT JOIN t_user_attend ua
    ON a.ATTEND_ID = ua.ATTEND_ID
    LEFT JOIN t_user u
    ON ua.USER_ID = u.USER_ID
    WHERE YEARWEEK(date_format(a.ATTEND_DATE,'%Y-%m-%d')) = YEARWEEK(now())
  </select>

</mapper>
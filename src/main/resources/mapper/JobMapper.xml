<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.dao.JobMapper" >
  <resultMap id="BaseResultMap" type="com.spring.model.Job" >
    <id column="JOB_ID" property="jobId" jdbcType="VARCHAR" />
    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
    <result column="ATTACH_DEPT_ID" property="attachDeptId" jdbcType="VARCHAR"/>
    <result column="VOLUME" property="volume" jdbcType="INTEGER"/>
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="STATUS" property="status" jdbcType="INTEGER"/>
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    JOB_ID, JOB_NAME, REMARK
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    j.*,d.DEPT_NAME
    from t_job j
    LEFT JOIN t_dept d
    ON j.ATTACH_DEPT_ID = d.DEPT_ID
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_job
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.spring.model.Job" >
    insert into t_job (JOB_ID, JOB_NAME, ATTACH_DEPT_ID, VOLUME, REMARK , CREATE_TIME , UPDATE_TIME , STATUS
      )
    values (#{jobId,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR},
        #{attachDeptId,jdbcType=VARCHAR}, #{volume,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
        #{createTime} , #{updateTime}, #{status}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.model.Job" >
    insert into t_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        JOB_ID,
      </if>
      <if test="jobName != null" >
        JOB_NAME,
      </if>
      <if test="attachDeptId != null">
        ATTACH_DEPT_ID,
      </if>
      <if test="volume != null">
        VOLUME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="attachDeptId != null">
        #{attachDeptId,jdbcType=VARCHAR},
      </if>
      <if test="volume != null">
        #{volume, jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.model.Job" >
    update t_job
    <set >
      <if test="jobName != null" >
        JOB_NAME = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="attachDeptId != null">
        ATTACH_DEPT_ID = #{attachDeptId,jdbcType=VARCHAR},
      </if>
      <if test="volume != null">
        VOLUME = #{volume,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime},
      </if>
      <if test="status != null">
        STATUS = #{status},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.model.Job" >
    update t_job
    set JOB_NAME = #{jobName,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </update>

  <select id="getAllJobMessage" resultMap="BaseResultMap">
    SELECT j.* ,d.DEPT_NAME FROM t_job j
    LEFT JOIN t_dept d
    ON j.ATTACH_DEPT_ID = d.DEPT_ID
  </select>

  <select id="getAllJob" resultMap="BaseResultMap">
    SELECT j.* ,d.DEPT_NAME FROM t_job j
    LEFT JOIN t_dept d
    ON j.ATTACH_DEPT_ID = d.DEPT_ID
  </select>

  <select id="getAllJobByJobName" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM
    t_job
    WHERE
    JOB_NAME = #{jobName}
  </select>
  
  <delete id="batchDelete" parameterType="java.util.List">
    DELETE FROM t_job
    WHERE JOB_ID IN
    <foreach collection="list" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
  </delete>

  <select id="getMessageByCondition" resultMap="BaseResultMap" parameterType="com.spring.param.JobFilter">
    SELECT j.*, d.DEPT_NAME FROM t_job j
    LEFT JOIN t_dept d
    ON j.ATTACH_DEPT_ID = d.DEPT_ID
    WHERE 1=1
    <if test="jobName != null and jobName != ''">
      AND j.JOB_NAME = #{jobName}
    </if>
    <if test="deptId != null">
      AND j.ATTACH_DEPT_ID = #{deptId}
    </if>
  </select>
  
  <select id="getCountByFilter" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM  t_job
    WHERE 1=1
    <if test="_parameter != null and _parameter != ''">
      <![CDATA[
          AND DATE_FORMAT(CREATE_TIME, '%Y-%m-%d %H:%T:%s') <= DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%T:%s')
      ]]>
    </if>
  </select>

  <select id="getAllJobByDeptId" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM t_job
    WHERE ATTACH_DEPT_ID = #{deptHrId}
  </select>
  
  <select id="getJobMessageByJobName" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM t_job
    WHERE JOB_NAME = #{jobName,jdbcType=VARCHAR}
  </select>

</mapper>
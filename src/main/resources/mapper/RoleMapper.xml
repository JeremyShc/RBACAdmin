<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.spring.model.permission.Role" >
    <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="FLAG" property="flag" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    ROLE_ID, ROLE_NAME, CREATE_TIME, UPDATE_TIME, REMARK, STATUS,  FLAG
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.spring.model.permission.Role" >
    insert into t_role (ROLE_ID, ROLE_NAME, CREATE_TIME, UPDATE_TIME, REMARK
      STATUS, FLAG
      )
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.model.permission.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.model.permission.Role" >
    update t_role
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.model.permission.Role" >
    update t_role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      FLAG = #{flag,jdbcType=INTEGER}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>

  <select id="getAllRoleMessage" resultMap="BaseResultMap">
    SELECT * FROM t_role
  </select>

  <select id="getAllVaildRoles" resultMap="BaseResultMap">
    SELECT * FROM t_role
    WHERE STATUS=1
  </select>

  <select id="getRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT r.* FROM
    t_role r LEFT JOIN
    t_user_role u ON r.ROLE_ID=u.ROLE_ID
    WHERE
    u.USER_ID = #{userId}
  </select>

  <select id="getAllRoles" resultMap="BaseResultMap">
    SELECT * FROM t_role
    WHERE STATUS=1
  </select>

  <select id="getAllRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT r.* FROM
    t_role r LEFT JOIN
    t_user_role u ON
    r.ROLE_ID=u.ROLE_ID
    WHERE u.USER_ID = #{userId}
  </select>

  <delete id="batchDelete" parameterType="java.util.List">
    DELETE FROM t_role
    WHERE ROLE_ID IN 
    <foreach collection="list" separator="," item="item" open="(" close=")">
      #{item}
    </foreach>
  </delete>
  
  <select id="getMessageByCondition" resultMap="BaseResultMap" parameterType="com.spring.param.RoleFilter">
    SELECT * FROM t_role
    WHERE 1=1
    <if test="roleName !=null and roleName != ''">
      AND ROLE_NAME LIKE concat(concat('%', #{roleName}, '%'))
    </if>
    <if test="status != null">
      AND STATUS = #{status}
    </if>
  </select>
  
</mapper>